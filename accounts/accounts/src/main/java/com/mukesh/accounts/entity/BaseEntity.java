package com.mukesh.accounts.entity;

import jakarta.persistence.Column;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.MappedSuperclass;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.time.LocalDateTime;


@Getter@Setter@ToString
@MappedSuperclass
@EntityListeners(AuditingEntityListener.class)
public class BaseEntity {



    @Column(updatable = false)
    @CreatedDate
    private LocalDateTime createdAt;

    @CreatedBy
    @Column(updatable = false)
    private String createdBy;


    @LastModifiedDate
    @Column(insertable = false)
    private LocalDateTime updatedAt;

    @LastModifiedBy
    @Column(insertable = false)
    private String updatedBy;



    /**
     *  @Column(updatable = false)   :   Explanation
     *
    In Java's Java Persistence API (JPA), the @Column annotation is used to specify the details of a column in the database table
    that corresponds to a field or property in an entity class. The updatable attribute of the @Column annotation is a boolean value
    that determines whether the column's value can be updated after the entity is initially persisted (saved) to the database.

    When you set @Column(updatable = false), it means that once the entity has been persisted, the value of this column
    cannot be changed by updating the entity and then merging it back into the persistence context. Essentially, this column
    becomes read-only after the initial insert operation.

    When you set @Column(insertable = false), it means that the value of this column will not be included in the SQL INSERT statement
    generated by the JPA provider when a new entity instance is being saved to the database. This can be useful in scenarios where the column's
    value is automatically generated by the database (e.g., auto-increment fields, default values set by the database, or columns managed by
    database triggers).

     **/

}
